{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://oasis-open.org/openc2/oc2ls/v1.0.1/rsp",
  "title": "Language schema with errata - Response",
  "description": "OpenC2 LS version 1.0 + errata",
  "$ref": "#/definitions/OpenC2-Response",
  "definitions": {
    "OpenC2-Response": {
      "title": "OpenC2 Response",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "$ref": "#/definitions/Status-Code",
          "description": "An integer status code"
        },
        "status_text": {
          "type": "string",
          "description": "A free-form human-readable description of the Response status"
        },
        "results": {
          "$ref": "#/definitions/Results",
          "description": "Map of key:value pairs that contain additional results based on the invoking Command."
        }
      }
    },
    "Action": {
      "title": "Action",
      "type": "string",
      "oneOf": [
        {
          "const": "scan",
          "description": "Systematic examination of some aspect of the entity or its environment."
        },
        {
          "const": "locate",
          "description": "Find an object physically, logically, functionally, or by organization."
        },
        {
          "const": "query",
          "description": "Initiate a request for information."
        },
        {
          "const": "deny",
          "description": "Prevent a certain event or action from completion, such as preventing a flow from reaching a destination or preventing access."
        },
        {
          "const": "contain",
          "description": "Isolate a file, process, or entity so that it cannot modify or access assets or processes."
        },
        {
          "const": "allow",
          "description": "Permit access to or execution of a Target."
        },
        {
          "const": "start",
          "description": "Initiate a process, application, system, or activity."
        },
        {
          "const": "stop",
          "description": "Halt a system or end an activity."
        },
        {
          "const": "restart",
          "description": "Stop then start a system or an activity."
        },
        {
          "const": "cancel",
          "description": "Invalidate a previously issued Action."
        },
        {
          "const": "set",
          "description": "Change a value, configuration, or state of a managed entity."
        },
        {
          "const": "update",
          "description": "Instruct a component to retrieve, install, process, and operate in accordance with a software update, reconfiguration, or other update."
        },
        {
          "const": "redirect",
          "description": "Change the flow of traffic to a destination other than its original destination."
        },
        {
          "const": "create",
          "description": "Add a new entity of a known type (e.g., data, files, directories)."
        },
        {
          "const": "delete",
          "description": "Remove an entity (e.g., data, files, flows)."
        },
        {
          "const": "detonate",
          "description": "Execute and observe the behavior of a Target (e.g., file, hyperlink) in an isolated environment."
        },
        {
          "const": "restore",
          "description": "Return a system to a previously known state."
        },
        {
          "const": "copy",
          "description": "Duplicate an object, file, data flow, or artifact."
        },
        {
          "const": "investigate",
          "description": "Task the recipient to aggregate and report information as it pertains to a security event or incident."
        },
        {
          "const": "remediate",
          "description": "Task the recipient to eliminate a vulnerability or attack point."
        }
      ]
    },
    "Results": {
      "title": "Results",
      "type": "object",
      "additionalProperties": false,
      "minProperties": 1,
      "properties": {
        "versions": {
          "type": "array",
          "description": "List of OpenC2 language versions supported by this Actuator",
          "uniqueItems": true,
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Version",
            "description": "List of OpenC2 language versions supported by this Actuator"
          }
        },
        "profiles": {
          "type": "array",
          "description": "List of profiles supported by this Actuator",
          "items": {
            "$ref": "#/definitions/Nsid"
          }
        },
        "pairs": {
          "$ref": "#/definitions/Action-Targets",
          "description": "List of targets applicable to each supported Action"
        },
        "rate_limit": {
          "type": "number",
          "description": "Maximum number of requests per minute supported by design or policy"
        }
      }
    },
    "Action-Targets": {
      "title": "Action Targets",
      "type": "object",
      "description": "Map of each action supported by this actuator to the list of targets applicable to that action",
      "additionalProperties": false,
      "minProperties": 1,
      "properties": {
        "scan": {
          "$ref": "#/definitions/Targets"
        },
        "locate": {
          "$ref": "#/definitions/Targets"
        },
        "query": {
          "$ref": "#/definitions/Targets"
        },
        "deny": {
          "$ref": "#/definitions/Targets"
        },
        "contain": {
          "$ref": "#/definitions/Targets"
        },
        "allow": {
          "$ref": "#/definitions/Targets"
        },
        "start": {
          "$ref": "#/definitions/Targets"
        },
        "stop": {
          "$ref": "#/definitions/Targets"
        },
        "restart": {
          "$ref": "#/definitions/Targets"
        },
        "cancel": {
          "$ref": "#/definitions/Targets"
        },
        "set": {
          "$ref": "#/definitions/Targets"
        },
        "update": {
          "$ref": "#/definitions/Targets"
        },
        "redirect": {
          "$ref": "#/definitions/Targets"
        },
        "create": {
          "$ref": "#/definitions/Targets"
        },
        "delete": {
          "$ref": "#/definitions/Targets"
        },
        "detonate": {
          "$ref": "#/definitions/Targets"
        },
        "restore": {
          "$ref": "#/definitions/Targets"
        },
        "copy": {
          "$ref": "#/definitions/Targets"
        },
        "investigate": {
          "$ref": "#/definitions/Targets"
        },
        "remediate": {
          "$ref": "#/definitions/Targets"
        }
      }
    },
    "Targets": {
      "title": "Targets",
      "type": "array",
      "description": "List of JSON Pointers to Target types",
      "uniqueItems": true,
      "minItems": 1,
      "maxItems": 100,
      "items": {
        "$ref": "#/definitions/Target$Pointer"
      }
    },
    "Target$Pointer": {
      "title": "Target$Pointer",
      "type": "string",
      "oneOf": [
        {
          "const": "artifact",
          "description": ""
        },
        {
          "const": "command",
          "description": ""
        },
        {
          "const": "device",
          "description": ""
        },
        {
          "const": "domain_name",
          "description": ""
        },
        {
          "const": "email_addr",
          "description": ""
        },
        {
          "const": "features",
          "description": ""
        },
        {
          "const": "file",
          "description": ""
        },
        {
          "const": "idn_domain_name",
          "description": ""
        },
        {
          "const": "idn_email_addr",
          "description": ""
        },
        {
          "const": "ipv4_net",
          "description": ""
        },
        {
          "const": "ipv6_net",
          "description": ""
        },
        {
          "const": "ipv4_connection",
          "description": ""
        },
        {
          "const": "ipv6_connection",
          "description": ""
        },
        {
          "const": "iri",
          "description": ""
        },
        {
          "const": "mac_addr",
          "description": ""
        },
        {
          "const": "process",
          "description": ""
        },
        {
          "const": "properties",
          "description": ""
        },
        {
          "const": "uri",
          "description": ""
        }
      ]
    },
    "Status-Code": {
      "title": "Status Code",
      "type": "integer",
      "oneOf": [
        {
          "const": 102,
          "description": "Processing - an interim Response used to inform the Producer that the Consumer has accepted the Command but has not yet completed it."
        },
        {
          "const": 200,
          "description": "OK - the Command has succeeded."
        },
        {
          "const": 400,
          "description": "BadRequest - the Consumer cannot process the Command due to something that is perceived to be a Producer error (e.g., malformed Command syntax)."
        },
        {
          "const": 401,
          "description": "Unauthorized - the Command Message lacks valid authentication credentials for the target resource or authorization has been refused for the submitted credentials."
        },
        {
          "const": 403,
          "description": "Forbidden - the Consumer understood the Command but refuses to authorize it."
        },
        {
          "const": 404,
          "description": "NotFound - the Consumer has not found anything matching the Command."
        },
        {
          "const": 500,
          "description": "InternalError - the Consumer encountered an unexpected condition that prevented it from performing the Command."
        },
        {
          "const": 501,
          "description": "NotImplemented - the Consumer does not support the functionality required to perform the Command."
        },
        {
          "const": 503,
          "description": "ServiceUnavailable - the Consumer is currently unable to perform the Command due to a temporary overloading or maintenance of the Consumer."
        }
      ]
    },
    "Nsid": {
      "title": "Nsid",
      "type": "string",
      "description": "A short identifier that refers to a namespace.",
      "minLength": 1,
      "maxLength": 16
    },
    "Version": {
      "title": "Version",
      "type": "string",
      "description": "Major.Minor version number"
    }
  }
}